{"version":3,"sources":["Authentication.js","Login.js","User.js","App.js","index.js"],"names":["firebaseAuth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","HasAccount","setHasAccount","emailError","passwordError","className","type","autoFocus","required","value","onChange","event","target","onClick","User","handleLogout","onclick","App","useState","user","setUser","setEmailError","setPasswordError","clearErrors","authListener","Authentication","auth","onAuthStateChanged","useEffect","signOut","signInWithEmailAndPassword","catch","error","code","message","createUserWithEmailAndPassword","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAceA,G,YAFMC,EAASC,cATT,CACnBC,OAAQ,0CACRC,WAAY,yCACZC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,+C,OCmDMC,EA5DD,SAACC,GACb,IACEC,EAUED,EAVFC,MACAC,EASEF,EATFE,SACAC,EAQEH,EARFG,SACAC,EAOEJ,EAPFI,YACAC,EAMEL,EANFK,YACAC,EAKEN,EALFM,aACYC,EAIVP,EAJFQ,WACAC,EAGET,EAHFS,cACAC,EAEEV,EAFFU,WACAC,EACEX,EADFW,cAGF,OACE,yBAASC,UAAU,QAAnB,SACE,sBAAKA,UAAU,iBAAf,UACE,6CACA,uBACEC,KAAK,OACLC,WAAS,EACTC,UAAQ,EACRC,MAAOf,EACPgB,SAAU,SAACC,GAAD,OAAWhB,EAASgB,EAAMC,OAAOH,UAE7C,mBAAGJ,UAAU,eAAb,SAA6BF,IAE7B,6CACA,uBACEG,KAAK,WACLE,UAAQ,EACRC,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAWd,EAAYc,EAAMC,OAAOH,UAEhD,mBAAGJ,UAAU,eAAb,SAA6BD,IAE7B,qBAAKC,UAAU,kBAAf,SACGL,EACC,qCACE,wBAAQa,QAASf,EAAjB,sBACA,wDAEE,sBAAMe,QAAS,kBAAMX,GAAeF,IAApC,4BAIJ,qCACE,wBAAQa,QAASd,EAAjB,sBACA,kDAEE,sBAAMc,QAAS,kBAAMX,GAAeF,IAApC,oCCzCDc,EATF,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACd,OACE,gCACE,yCACA,wBAAQC,QAASD,EAAjB,wBCgGSE,EA9FH,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOxB,EAAP,KAAcC,EAAd,KACA,EAAgCuB,mBAAS,IAAzC,mBAAOtB,EAAP,KAAiBC,EAAjB,KACA,EAAoCqB,mBAAS,IAA7C,mBAAOf,EAAP,KAAmBkB,EAAnB,KACA,EAA0CH,mBAAS,IAAnD,mBAAsBI,GAAtB,WACA,EAAoCJ,mBAAS,IAA7C,mBAAOjB,EAAP,KAAmBC,EAAnB,KAOMqB,EAAc,WAClBF,EAAc,IACdC,EAAiB,KA0CbE,EAAe,WACnBC,EAAeC,OAAOC,oBAAmB,SAACR,GACpCA,GAlDNE,EAAc,IACdC,EAAiB,IAmDbF,EAAQD,IAERC,EAAQ,QASd,OAJAQ,qBAAU,WACRJ,MACC,IAGD,qBAAKnB,UAAU,MAAf,SACGc,EACC,cAAC,EAAD,CAAMJ,aAtBS,WACnBU,EAAeC,OAAOG,aAuBlB,cAAC,EAAD,CACEnC,MAAOA,EACPC,SAAUA,EACVC,SAAUC,EACVA,YAAayB,EACbxB,YAhEY,WAClByB,IACAE,EAAeC,OACZI,2BAA2BpC,EAAOE,GAClCmC,OAAM,SAACC,GACN,OAAQA,EAAMC,MACZ,IAAK,qBACL,IAAK,qBACL,IAAK,sBACHZ,EAAcW,EAAME,SACpB,MACF,IAAK,sBACHZ,EAAiBU,EAAME,cAqDzBnC,aA/Ca,WACnBwB,IACAE,EAAeC,OACZS,+BAA+BzC,EAAOE,GACtCmC,OAAM,SAACC,GACN,OAAQA,EAAMC,MACZ,IAAK,4BACL,IAAK,qBACHZ,EAAcW,EAAME,SACpB,MACF,IAAK,qBACHZ,EAAiBU,EAAME,cAqCzBjC,WAAYA,EACZC,cAAeA,EACfC,WAAYA,EACZC,cAAekB,OCxFzBc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.597f33f3.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBPhlIVu0y0DdHSiBQBjBXZJzhmb_rnL8E\",\r\n  authDomain: \"reactandfirebase-2c76d.firebaseapp.com\",\r\n  projectId: \"reactandfirebase-2c76d\",\r\n  storageBucket: \"reactandfirebase-2c76d.appspot.com\",\r\n  messagingSenderId: \"826357030956\",\r\n  appId: \"1:826357030956:web:bba12633d9c2097dcdf189\",\r\n};\r\n// Initialize Firebase\r\nconst firebaseAuth = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebaseAuth;\r\n","const Login = (props) => {\r\n  const {\r\n    email,\r\n    setEmail,\r\n    password,\r\n    setPassword,\r\n    handleLogin,\r\n    handleSignup,\r\n    HasAccount: hasAccount,\r\n    setHasAccount,\r\n    emailError,\r\n    passwordError,\r\n  } = props;\r\n\r\n  return (\r\n    <section className=\"login\">\r\n      <div className=\"loginContainer\">\r\n        <label>Username</label>\r\n        <input\r\n          type=\"text\"\r\n          autoFocus\r\n          required\r\n          value={email}\r\n          onChange={(event) => setEmail(event.target.value)}\r\n        />\r\n        <p className=\"errorMessage\">{emailError}</p>\r\n\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          required\r\n          value={password}\r\n          onChange={(event) => setPassword(event.target.value)}\r\n        />\r\n        <p className=\"errorMessage\">{passwordError}</p>\r\n\r\n        <div className=\"buttonContainer\">\r\n          {hasAccount ? (\r\n            <>\r\n              <button onClick={handleLogin}> Sign In</button>\r\n              <p>\r\n                Don't have an account ?\r\n                <span onClick={() => setHasAccount(!hasAccount)}>Sign Up!</span>\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <button onClick={handleSignup}> Sign Up</button>\r\n              <p>\r\n                Have an account ?\r\n                <span onClick={() => setHasAccount(!hasAccount)}>Sign In!</span>\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","const User = ({ handleLogout }) => {\r\n  return (\r\n    <nav>\r\n      <h2>Welcome</h2>\r\n      <button onclick={handleLogout}>Logout</button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Authentication from \"./Authentication\";\nimport Login from \"./Login\";\nimport User from \"./User\";\n\nconst App = () => {\n  const [user, setUser] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [HasAccount, setHasAccount] = useState(\"\");\n\n  const clearInputs = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    Authentication.auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => {\n        switch (error.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(error.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(error.message);\n            break;\n        }\n      });\n  };\n\n  const handleSignup = () => {\n    clearErrors();\n    Authentication.auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch((error) => {\n        switch (error.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(error.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(error.message);\n            break;\n        }\n      });\n  };\n\n  const handleLogout = () => {\n    Authentication.auth().signOut();\n  };\n\n  const authListener = () => {\n    Authentication.auth().onAuthStateChanged((user) => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {user ? (\n        <User handleLogout={handleLogout} />\n      ) : (\n        <Login\n          email={email}\n          setEmail={setEmail}\n          password={setPassword}\n          setPassword={setPasswordError}\n          handleLogin={handleLogin}\n          handleSignup={handleSignup}\n          HasAccount={HasAccount}\n          setHasAccount={setHasAccount}\n          emailError={emailError}\n          passwordError={setPasswordError}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}